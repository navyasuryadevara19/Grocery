server/.env





  //   try {
  //     // Check if the email already exists
  //     const existingUser = await User.findOne({ Email });
  //     if (existingUser) {
  //         return res.status(400).json({ message: 'Email already in use.' });
  //     }

  //     // Proceed with user creation if email is not taken
  //     const newUser = new User({
  //         Username,
  //         Email,
  //         Password,
  //         ConfirmPassword,
  //         salt,
  //     });

  //     await newUser.save();
  //     await sendVerificationEmail(Email);
  //     res.status(200).json({ message: 'Signup successful, verification email sent.' });
  // } catch (error) {
  //     console.log('Error during signup:', error);
  //     res.status(500).json({ message: 'Server error, please try again later.' });
  // }
























import React from 'react';
import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';
import './App.css';
import Home from './Home.jsx';
import Features from './Features.jsx';
import Products from './Products.jsx';
import Categories from './Categories.jsx';
import Review from './Review.jsx';
import Blogs from './Blogs.jsx';
import Signup from './Signup.jsx';
import Carousel from './Carousel.jsx';
import NavbarLogin from './NavbarLogin.jsx';
import Contact from './Contact.jsx';
import VerifyEmail from './Verifyemail.jsx';
import PhoneNumberForm from './phoneNumberForm.jsx';
import OtpForm from './OtpVerification.jsx';
import EmailVerification from './EmailVerification.jsx';
import EmailOtpForm from './EmailOtpVerification.jsx';
import LoginVerify from './LoginVerify.jsx';
import LoginOtpForm from './LoginOtpVerify.jsx';
import PasswordVerification from './ResetPasswordEmail.jsx';
import PasswordOtpForm from './ResetPasswordOtp.jsx';
import ResetPassword from './ResetPassword.jsx';



function App() {
  return (
      <Router>
        <Routes>
          <Route path="/" element={< Home/>} />
          <Route path="/Features" element={<Features/>} />
          <Route path="/Products" element={<Products/>} />
          <Route path="/Categories" element={<Categories />} />
          <Route path="/Review" element={<Review />} />
          <Route path="/Blogs" element={<Blogs/>} />
          <Route path="/Signup" element={<Signup />} />
          <Route path="/NavbarLogin" element={<NavbarLogin />} />
          <Route path="/Carousel" element={<Carousel />} />
          <Route path="/Contact" element={<Contact />} />
          <Route path="/VerifyEmail" element={<VerifyEmail />} />
          <Route path="/Phonenumber" element={<PhoneNumberForm />} />
          <Route path="/otpVerification" element={<OtpForm />} />
          <Route path="/EmailVerification" element={<EmailVerification />} />
          <Route path="/EmailOtpVerification" element={<EmailOtpForm />} />
          <Route path="/LoginVerification" element={<LoginVerify />} />
          <Route path="/LoginOtpVerification" element={<LoginOtpForm />} />
          <Route path="/PasswordVerification" element={<PasswordVerification />} />
          <Route path="/PasswordOtpVerification" element={<PasswordOtpForm />} />
          <Route path="/ResetPassword" element={<ResetPassword />} />
        </Routes>
      </Router>
  );
}

export default App;



























import React, { useEffect, useState } from 'react';
import DOMPurify from 'dompurify';
import axios from 'axios';
import { useNavigate } from 'react-router-dom';
import './css/Style.css';
import Aos from 'aos';
import 'aos/dist/aos.css';
import cartImage1 from './images/cart-img-1.png';
import cartImage2 from './images/cart-img-2.png';
import cartImage3 from './images/cart-img-3.png';


const NavbarLogin = ({ onLogin }) => {
  
  const [Email, setEmail] = useState('');
  const [Password, setPassword] = useState('');

const navigate = useNavigate();

  const handleEmail = (event) => {
    const sanitizedValue = DOMPurify.sanitize(event.target.value);
    setEmail(sanitizedValue);
  };

  const handlePassword = (event) => {
    const sanitizedValue = DOMPurify.sanitize(event.target.value);
    setPassword(sanitizedValue);
  };


  const handleSubmit = (event) => {
    event.preventDefault();
    onLogin();

    const sanitizedEmail = DOMPurify.sanitize(Email);
    const sanitizedPassword = DOMPurify.sanitize(Password);

    axios.post('http://localhost:5000/Login', { 

      Email: sanitizedEmail,
      Password: sanitizedPassword


    }).then((response) => {
      if(response.status === 200){
          console.log(response.data.message);
          setTimeout(()=>navigate('/Features'),1000);
      }else{
          throw new Error('Error: ' + response.status);
          
      }
    }).catch(error => {
      console.error(error);
      if (error.response?.status === 400) {
          console.log('Invalid UserName or Password');
      }
      
      else if (error.response?.status === 600) {
          console.log('Invalid UserName or Password');
      }
    });
    }

  
  useEffect(() => {
      // Define variables for different elements
      const searchForm = document.querySelector('.search-form');
      const shoppingCart = document.querySelector('.shopping-cart');
      const loginForm = document.querySelector('.login-form');
      const navbar = document.querySelector('.navbar');
      
      // Toggle search form visibility on search button click
      document.querySelector('#search-btn').onclick = () => {
          searchForm.classList.toggle('active'); 
          shoppingCart.classList.remove('active');
          loginForm.classList.remove('active');
          navbar.classList.remove('active');
      }
      
      // Toggle shopping cart visibility on cart button click
      document.querySelector('#cart-btn').onclick = () => {
          searchForm.classList.remove('active'); 
          shoppingCart.classList.toggle('active'); 
          loginForm.classList.remove('active');
          navbar.classList.remove('active');
      }
      
      // Toggle login form visibility on login button click
      document.querySelector('#login-btn').onclick = () => {
          searchForm.classList.remove('active'); 
          shoppingCart.classList.remove('active');
          loginForm.classList.toggle('active');
          navbar.classList.remove('active');
      }
      
      // Toggle navbar visibility on menu button click
      document.querySelector('#menu-btn').onclick = () => {
          searchForm.classList.remove('active'); 
          shoppingCart.classList.remove('active');
          loginForm.classList.remove('active');
          navbar.classList.toggle('active'); 
      }
      
      // Close all elements when scrolling
      window.onscroll = () => {
          searchForm.classList.remove('active');
          shoppingCart.classList.remove('active');
          loginForm.classList.remove('active');
          navbar.classList.remove('active');
      }
      


}, []);

useEffect(() => {
  Aos.init({duration:1000});  
}, []);
 


  return (
    <div>
     
      <header className="header">
        <a href="/" className="logo" data-aos="fade-right"><i className="fa fa-shopping-basket"></i>Grocery</a>
        <nav className="navbar">
          <a href="/">Home</a>
            <a href="/Features">Features</a>
              <a href="/Products">Products</a>
              <a href="/Categories">Categories</a>
              <a href="/Review">Review</a>
              <a href="/Blogs">Blogs</a>
        </nav>
        <div className="icons" data-aos="fade-left">
          <div className="fa fa-bars" id="menu-btn"></div>
          <div className="fa fa-search" id="search-btn"></div>
          <div className="fa fa-shopping-cart" id="cart-btn"></div>
          <div className="fa fa-user" id="login-btn"></div>
        </div>
        <form className="search-form">
          <input type="search" id="search-box" placeholder="Search Here...." />
          <label htmlFor="search-box" className="fa fa-search"></label>
        </form>

        <div className="shopping-cart">
<div className="box">
  <i className='fa fa-trash'></i>
  <img src={cartImage1} alt="Watermelon" />
  <div className="content">
    <h3>Watermelon</h3>
    <span className="price">$5.99/-</span>
    <span className="quantity">Qty : 1</span>
  </div>
</div>
<div className="box">
<i className='fa fa-trash'></i>
  <img src={cartImage2} alt="Onion" />
  <div className="content">
    <h3>Onion</h3>
    <span className="price">$4.99/-</span>
    <span className="quantity">Qty : 1</span>
  </div>
</div>
<div className="box">
<i className='fa fa-trash'></i>
  <img src={cartImage3} alt="Chicken" />
  <div className="content">
    <h3>Chicken</h3>
    <span className="price">$7.99/-</span>
    <span className="quantity">Qty : 1</span>
  </div>
</div>
<div className="total">total : $18.97</div>
<a href="/" className="btn">Checkout</a>
</div>


<form action="#" className="login-form" onSubmit={handleSubmit}>
<h3>Login</h3>
<input type="email" value={Email} placeholder="Email" className="box" onChange={handleEmail} required/>

<input type="password" value={Password} placeholder="Password" className="box" onChange={handlePassword} required/>
<p>Forgot Your Password <a href="/PasswordVerification">Click Here</a></p>
<p>Don't Have An Account <a href="/Signup">Signup</a></p>
<input type="submit" value="Login" className="btn" />
</form>

      </header>
    </div>
  );
}

export default NavbarLogin;

